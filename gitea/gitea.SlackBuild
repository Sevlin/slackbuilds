#!/usr/bin/env bash

# Slackware build script for Gitea

# Copyright 2019, Mykyta Solomko <sev@nix.org.ua>, Kyiv, Ukraine
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=gitea
VERSION=${VERSION:-1.10.1}
BUILD=${BUILD:-1}
TAG=${TAG:-sev}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/build/${ARCH}}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

GITEAUSER=${GITEAUSER:-git}
GITEAGROUP=${GITEAGROUP:-git}
GITEAUID=${GITEAUID:-507}
GITEAGID=${GITEAGID:-507}

set -e # Exit on most errors

# Check if the gitea user and group exist. If not, then bail.
if ! grep -q "^${GITEAGROUP}:" /etc/group ; then
    echo "  You must have a \"${GITEAGROUP}\" group to run this script."
    echo "    # groupadd -g ${GITEAGID} ${GITEAGROUP}"
    exit 1
fi

if ! grep -q "^${GITEAUSER}:" /etc/passwd ; then
    echo "  You must have a \"${GITEAUSER}\" user to run this script."
    echo "    # useradd -u ${GITEAUID} -g ${GITEAGROUP} -d /var/lib/gitea -s /bin/bash -c \"User for Gitea\" ${GITEAUSER}"
    exit 1
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/v$VERSION.tar.?z*
cd $PRGNAM-$VERSION
chown -R root:root .

export GOPATH="$(pwd)/.gopath"
export PATH="${GOPATH}/bin:${PATH}"
mkdir -p "${GOPATH}/src/code.gitea.io"
go get -u github.com/jteeuwen/go-bindata/

pushd "${GOPATH}/src/code.gitea.io"
    ln -sf ../../../ "${GOPATH}/src/code.gitea.io/gitea"
popd

pushd "${GOPATH}/src/code.gitea.io/gitea"
    # Don't try to get version from git
    #
    # This hack is taken from Gentoo's gitea.ebuild 
    sed -i -e "s/\"main.Version.*$/\"main.Version=${VERSION}\"/"  Makefile

    TAGS="bindata" \
    make generate build
popd

mkdir -p ${PKG}/usr/bin \
         ${PKG}/etc/gitea \
         ${PKG}/var/run/gitea \
         ${PKG}/var/lib/gitea/{custom,data,indexers,public,log}

chown root:${GITEAUSER} ${PKG}/etc/gitea
chown -R ${GITEAUSER}:${GITEAGROUP} ${PKG}/var/lib/gitea \
                                    ${PKG}/var/run/gitea
chmod 750 ${PKG}/etc/gitea \
          ${PKG}/var/lib/gitea/{data,indexers,log}

install -m755 gitea -t ${PKG}/usr/bin/

# Strip binaries and libraries
find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

# Copy program documentation into the package
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  CHANGELOG.md CONTRIBUTING.md MAINTAINERS README.md custom/conf/app.ini.sample \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
# slack-desc
cat > ${PKG}/install/slack-desc << EOF
     |-----handy-ruler------------------------------------------------------|
gitea: Gitea (a painless self-hosted Git service)
gitea:
gitea: Gitea is a community managed fork of Gogs, lightweight code hosting 
gitea: solution written in Go and published under the MIT license.
gitea:
gitea: Homepage: https://gitea.io/
gitea:
gitea:
gitea:
gitea:
gitea:
EOF

# doinst.sh
sed -e "s|%GITEAUSER%|${GITEAUSER}|g" \
    -e "s|%GITEAGROUP%|${GITEAGROUP}|g" \
    -e "s|%GITEAUID%|${GITEAUID}|g" \
    -e "s|%GITEAGID%|${GITEAGID}|g" \
    $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
