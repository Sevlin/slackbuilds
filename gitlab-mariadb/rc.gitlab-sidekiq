#!/bin/bash

if [ -r /etc/default/gitlab ]; then
	source /etc/default/gitlab
fi

GITLAB_USER=${GITLAB_USER:-%GITLABUSER%}
BUNDLE_BIN=${BUNDLER_BIN:-/usr/bin/bundle}
DOCROOT=${DOCROOT:-%DOCROOT%}
PIDDIR=${PIDDIR:-%PIDDIR%}
LOGDIR=${LOGDIR:-%LOGDIR%}
SIDEKIQ_LOGFILE=${LOGDIR%/}/sidekiq.log
SIDEKIQ_PIDFILE=${PIDDIR%/}/sidekiq.pid
RAILS_ENV=${RAILS_ENV:-'%RAILS_ENV%'}

ME="$(whoami)"

wait_pid()  
{
    local pid=${1}
    while test -d "/proc/${pid}"; do
        echo -n '.'
        sleep 1
    done
}

as_user()
{
        if [ "${ME}" != "${GITLAB_USER}" ]; then
                exec su -l ${GITLAB_USER} -c "${@}" &
        else
                exec bash -c "${@}" &
        fi
}

glsidekiq_start()
{
        CMD="${BUNDLE_BIN} exec \"sidekiq -d -q post_receive -q mailer -q system_hook -q project_web_hook -q gitlab_shell -q common -q default -q archive_repo -e ${RAILS_ENV} -P ${SIDEKIQ_PIDFILE} -L ${SIDEKIQ_LOGFILE}\""
        echo "Starting GitLab Sidekiq: ${CMD}"
        CMD="cd ${DOCROOT} && ${CMD}"
        as_user "${CMD}" 
}

glsidekiq_stop()
{
        echo -n "Shutting down GitLab Sidekiq..."
        if [ -r ${SIDEKIQ_PIDFILE} ]; then
                PID=$(cat ${SIDEKIQ_PIDFILE})
                MSG=$(kill -QUIT ${PID} 2>&1)
                if [ ${?} -eq 0 ]; then
			wait_pid ${PID}
                        echo "done"
                        rm -f ${SIDEKIQ_PIDFILE} &> /dev/null
                else
                        echo "failed"
                        echo "=== Error message ===" 1>&2
                        echo "${MSG}" 1>&2
                        rm -f ${SIDEKIQ_PIDFILE} &> /dev/null
                fi

        else
                echo "failed"
                echo "PID file ${SIDEKIQ_PIDFILE} is missing" 1>&2
                exit 1   
        fi
}

glsidekiq_restart()
{
	glsidekiq_stop
	glsidekiq_start
}

case "${1}" in
	'start'   ) glsidekiq_start   ;;
	'stop'    ) glsidekiq_stop    ;;
	'restart' ) glsidekiq_restart ;;
	*)
		echo "Usage: ${0} {start|stop|restart}"
		exit 1
	;;
esac

exit 0

