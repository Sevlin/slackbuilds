#!/bin/bash

if [ -r /etc/default/gitlab ]; then
	source /etc/default/gitlab
fi

RUNNER_USER=${RUNNER_USER:-'%GITLABRUNNERUSER%'}
RUNNER_BIN=${RUNNER_BIN:-'/usr/sbin/gitlab-runner'}
RUNNER_HOME=${RUNNER_HOME:-'/%GITLABRUNNERHOME%'}
RUNNER_PIDFILE=${RUNNER_PIDFILE:-'%PIDDIR%/runner.pid'}

ME="$(whoami)"

wait_pid()  
{
    local pid=${1}
    while test -d "/proc/${pid}"; do
        echo -n '.'
        sleep 1
    done
}

as_user()
{
        if [ "${ME}" != "${RUNNER_USER}" ]; then
                exec su -l ${RUNNER_USER} -c "${@}" &
        else
                exec bash -i -c "${@}" &
        fi
}

glrunner_start()
{
        CMD="${RUNNER_BIN} run --working-directory ${RUNNER_HOME} --config /etc/gitlab-runner/config.toml --service gitlab-runner --user ${RUNNER_USER} --syslog"
        echo "Starting GitLab CI runner: ${CMD}"
        as_user "${CMD}"
	echo "${!}" > ${RUNNER_PIDFILE}
}

glrunner_stop()
{
        echo -n "Shutting down GitLab CI runner..."
        if [ -r ${RUNNER_PIDFILE} ]; then
                PID=$(cat ${RUNNER_PIDFILE})
                MSG=$(kill -TERM ${PID} 2>&1)
                if [ ${?} -eq 0 ]; then
                        wait_pid ${PID}
                        echo "done"
                        rm -f ${RUNNER_PIDFILE} &> /dev/null
                else
                        echo "failed"
                        echo "=== Error message ===" 1>&2
                        echo "${MSG}" 1>&2
                        rm -f ${RUNNER_PIDFILE} &> /dev/null
                fi

        else
                echo "failed"
                echo "PID file ${RUNNER_PIDFILE} is missing" 1>&2
                exit 1
        fi
}

glrunner_restart()
{
	glrunner_stop
	glrunner_start
}

glunicorn_reload()
{
	echo "Reloading GitLab CI runner..."
	if [ -r ${RUNNER_PIDFILE} ]; then
		kill -HUP $(cat ${RUNNER_PIDFILE})
	else
		echo "PID file ${RUNNER_PIDFILE} is missing" 1>&2
		exit 1
	fi
}

case "${1}" in
	'start'   ) glrunner_start   ;;
	'stop'    ) glrunner_stop    ;;
	'restart' ) glrunner_restart ;;
	'reload'  ) glrunner_reload  ;;
	*)
		echo "Usage: ${0} {start|stop|restart|reload}"
		exit 1
	;;
esac

exit 0

